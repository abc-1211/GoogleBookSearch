{"version":3,"sources":["component/navbar.js","component/searchbox.js","component/headbox.js","component/resultbox.js","services.js","pages/search.js","component/savedbox.js","pages/saved.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","document","addEventListener","elems","querySelectorAll","M","Sidenav","init","Fragment","className","href","data-target","id","SearchBox","props","onSubmit","handleSubmit","placeholder","type","name","ref","register","htmlFor","HeadBox","ResultBox","books","map","book","index","key","volumeInfo","title","infoLink","onClick","save","authors","src","imageLinks","smallThumbnail","alt","description","searchBook","searchWord","a","fetch","process","res","json","getSaved","setSaved","data","method","body","JSON","stringify","headers","deleteSaved","_id","Search","useForm","useState","setBooks","services","api","console","log","items","msgBody","SavedBox","savedBooks","setSavedBooks","click","reload","window","location","useEffect","getSavedBooks","Saved","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+SA4DeA,MAxDf,WAME,OALEC,SAASC,iBAAiB,oBAAoB,WAC1C,IAAIC,EAAQF,SAASG,iBAAiB,YACtCC,IAAEC,QAAQC,KAAKJ,EAAO,OAI1B,kBAAC,IAAMK,SAAP,KAEE,yBAAKC,UAAU,gBAEb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,eACb,uBAAGC,KAAK,UAAUD,UAAU,qBAA5B,gBAGA,uBAAGC,KAAK,KAAKC,cAAY,cAAcF,UAAU,mBAC/C,uBAAGA,UAAU,kBAAb,SAEF,wBAAIA,UAAU,8BACZ,4BACE,uBAAGC,KAAK,WACN,uBAAGD,UAAU,kBAAb,UADF,WAKF,4BACE,uBAAGC,KAAK,UACN,uBAAGD,UAAU,kBAAb,QADF,cAWV,wBAAIA,UAAU,UAAUG,GAAG,eACzB,4BACE,uBAAGF,KAAK,WACN,uBAAGD,UAAU,kBAAb,UADF,WAKF,4BACE,uBAAGC,KAAK,UACN,uBAAGD,UAAU,kBAAb,QADF,aCbKI,MAnCf,SAAmBC,GACjB,OACE,kBAAC,IAAMN,SAAP,KACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cAAf,eACA,6BACA,0BAAMM,SAAUD,EAAME,cACpB,yBAAKP,UAAU,OACb,yBAAKA,UAAU,uBACb,2BACEQ,YAAY,eACZL,GAAG,aACHM,KAAK,OACLT,UAAU,WACVU,KAAK,aACLC,IAAKN,EAAMO,WAEb,2BAAOC,QAAQ,cAAf,UAGJ,yBAAKb,UAAU,cACb,yBAAKA,UAAU,WACb,4BAAQA,UAAU,MAAMS,KAAK,UAA7B,iBCRDK,MAff,WACE,OACE,kBAAC,IAAMf,SAAP,KACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,eACb,2DACA,qEACA,6BACA,iCC6CKe,MArDf,SAAmBV,GACjB,OACE,kBAAC,IAAMN,SAAP,KACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yCAGHK,EAAMW,MAAMC,KAAI,SAAUC,EAAMC,GAC/B,OACE,yBAAKnB,UAAU,OAAOoB,IAAKD,GACzB,yBAAKnB,UAAU,OACb,yBAAKA,UAAU,mBACb,4BAAKkB,EAAKG,WAAWC,QAEvB,yBAAKtB,UAAU,iBACb,4BAAQA,UAAU,MAAMS,KAAK,UAC3B,uBAAGR,KAAMiB,EAAKG,WAAWE,SAAUvB,UAAU,cAA7C,SAIF,4BAAQA,UAAU,MAAMS,KAAK,SAASe,QAAS,kBAAMnB,EAAMoB,KAAKN,KAAhE,UAKJ,yBAAKnB,UAAU,OACb,yBAAKA,UAAU,WAAf,cACckB,EAAKG,WAAWK,UAGhC,yBAAK1B,UAAU,OACb,yBAAKA,UAAU,iBACb,yBACE2B,IAAKT,EAAKG,WAAWO,WAAWC,eAChCC,IAAKZ,EAAKG,WAAWC,SAGzB,yBAAKtB,UAAU,iBACb,2BAAIkB,EAAKG,WAAWU,uB,QC3CzB,GACXC,WAAW,WAAD,4BAAE,WAAOC,GAAP,eAAAC,EAAA,+EAEcC,MAAM,yDAAD,OAA0DF,EAA1D,gBAA4EG,4CAF/F,cAEEC,EAFF,yBAGGA,EAAIC,QAHP,wHAAF,mDAAC,GASXC,SAAS,WAAD,4BAAE,4BAAAL,EAAA,+EAEgBC,MAAM,sCAFtB,cAEIE,EAFJ,yBAGKA,EAAIC,QAHT,wHAAF,kDAAC,GAQTE,SAAS,WAAD,4BAAE,WAAOC,GAAP,eAAAP,EAAA,+EAEgBC,MAAM,qCAAsC,CAC1DO,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACL,eAAgB,sBANtB,cAEIT,EAFJ,yBASKA,EAAIC,QATT,wHAAF,mDAAC,GAcTS,YAAY,WAAD,4BAAE,WAAOC,GAAP,eAAAd,EAAA,+EAEaC,MAAM,yCAAD,OAA0Ca,IAF5D,cAECX,EAFD,yBAGEA,EAAIC,QAHN,wHAAF,mDAAC,ICkBDW,MA1Cf,WAAmB,IAAD,EACmBC,cAA3BtC,EADQ,EACRA,SAAUL,EADF,EACEA,aADF,EAEU4C,mBAAS,IAFnB,mBAETnC,EAFS,KAEFoC,EAFE,KAIV9C,EAAQ,uCAAG,WAAOmC,GAAP,eAAAP,EAAA,+EAEKmB,EAASrB,WAAWS,EAAKR,YAF9B,OAEPqB,EAFO,OAGbC,QAAQC,IAAIF,GACZF,EAASE,EAAIG,OAJA,wIAAH,sDAURhC,EAAI,uCAAG,WAAON,GAAP,6BAAAe,EAAA,wEAEmDlB,EAAMG,GAAOE,WAAnEC,EAFG,EAEHA,MAAOC,EAFJ,EAEIA,SAAUG,EAFd,EAEcA,QAASK,EAFvB,EAEuBA,YAAaH,EAFpC,EAEoCA,WACzCa,EAAO,CACTnB,QACAC,WACAG,UACAK,cACAH,cAEF2B,QAAQC,IAAIf,GAVH,SAWSY,EAASb,SAASC,GAX3B,OAWHJ,EAXG,OAYTkB,QAAQC,IAAInB,EAAIqB,SAZP,2IAAH,sDAkBV,OACE,kBAAC,IAAM3D,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWQ,aAAcA,EAAaD,GAAWM,SAAUA,IAC3D,kBAAC,EAAD,CAAWI,MAAOA,EAAOS,KAAMA,MCwCtBkC,MAlFf,WAAqB,IAAD,EACkBR,mBAAS,IAD3B,mBACXS,EADW,KACCC,EADD,KAGZC,EAAK,uCAAG,WAAOd,GAAP,eAAAd,EAAA,+EAEUmB,EAASN,YAAYC,GAF/B,OAEFX,EAFE,OAGRkB,QAAQC,IAAIR,GACZO,QAAQC,IAAInB,EAAIqB,SACZrB,EAAI0B,QACJC,OAAOC,SAASF,SANZ,wIAAH,sDA2BX,OAbAG,qBAAU,YACW,uCAAG,4BAAAhC,EAAA,+EAECmB,EAASd,WAFV,OAEZE,EAFY,OAGlBoB,EAAcpB,GAHI,wIAAH,qDAQnB0B,KACC,IACHZ,QAAQC,IAAII,GAGV,kBAAC,IAAM7D,SAAP,KACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OAAf,gBAED4D,EAAW3C,KAAI,SAAUC,EAAMC,GAC9B,OACE,yBAAKnB,UAAU,OAAOoB,IAAKD,GACzB,yBAAKnB,UAAU,OACb,yBAAKA,UAAU,mBACb,4BAAKkB,EAAKI,QAEZ,yBAAKtB,UAAU,iBACb,4BAAQA,UAAU,MAAMS,KAAK,UAC3B,uBAAGR,KAAMiB,EAAKK,SAAUvB,UAAU,cAAlC,SAIF,4BACEA,UAAU,MACVS,KAAK,SACLe,QAAS,kBAAMsC,EAAM5C,EAAK8B,OAH5B,YASJ,yBAAKhD,UAAU,OACb,yBAAKA,UAAU,WAAf,cAAqCkB,EAAKQ,UAE5C,yBAAK1B,UAAU,OACb,yBAAKA,UAAU,iBACb,yBACE2B,IAAKT,EAAKU,WAAWC,eACrBC,IAAKZ,EAAKI,SAGd,yBAAKtB,UAAU,iBACb,2BAAIkB,EAAKa,uBC1DdqC,MAVf,WACI,OACI,kBAAC,IAAMrE,SAAP,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCUGsE,MAdf,WACE,OACE,kBAAC,IAAMtE,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjC,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,UAAUC,UAAWvB,IACvC,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,SAASC,UAAWJ,QCD5BK,QACW,cAA7BT,OAAOC,SAASS,UAEe,UAA7BV,OAAOC,SAASS,UAEhBV,OAAOC,SAASS,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtF,SAASuF,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhC,QAAQgC,MAAMA,EAAMC,c","file":"static/js/main.0b3b433c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\n\r\nfunction Navbar() {\r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n        var elems = document.querySelectorAll(\".sidenav\");\r\n        M.Sidenav.init(elems, {});\r\n      });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Turn Navbar into Sticky */}\r\n      <div className=\"navbar-fixed\">\r\n        {/* Navbar */}\r\n        <nav className=\"light-blue lighten-4\">\r\n          <div className=\"nav-wrapper\">\r\n            <a href=\"/search\" className=\"brand-logo center\">\r\n                Google Books\r\n            </a>\r\n            <a href=\"#!\" data-target=\"mobile-demo\" className=\"sidenav-trigger\">\r\n              <i className=\"material-icons\">menu</i>\r\n            </a>\r\n            <ul className=\"right hide-on-med-and-down\">\r\n              <li>\r\n                <a href=\"/search\">\r\n                  <i className=\"material-icons\">search</i>\r\n                  Search\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/saved\">\r\n                  <i className=\"material-icons\">note</i>\r\n                  Saved\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        {/* Navbar End */}\r\n      </div>\r\n      {/* Responsive Sidenav (activate when screen is too small) */}\r\n      <ul className=\"sidenav\" id=\"mobile-demo\">\r\n        <li>\r\n          <a href=\"/search\">\r\n            <i className=\"material-icons\">search</i>\r\n            Search\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/saved\">\r\n            <i className=\"material-icons\">note</i>\r\n            Saved\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction SearchBox(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <div className=\"card-title\">Book Search</div>\r\n          <br />\r\n          <form onSubmit={props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  placeholder=\"Harry Potter\"\r\n                  id=\"first_name\"\r\n                  type=\"text\"\r\n                  className=\"validate\"\r\n                  name=\"searchWord\"\r\n                  ref={props.register}\r\n                />\r\n                <label htmlFor=\"first_name\">Book</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"row center\">\r\n              <div className=\"col s12\">\r\n                <button className=\"btn\" type=\"submit\">\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nfunction HeadBox() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"card center\">\r\n          <h1>(React) Google Books Search</h1>\r\n          <h5>Search for and Save Books of Interest</h5>\r\n          <br/>\r\n          <br/>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default HeadBox;\r\n","import React from \"react\";\r\n\r\nfunction ResultBox(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h4>Results</h4>\r\n            </div>\r\n          </div>\r\n          {props.books.map(function (book, index) {\r\n            return (\r\n              <div className=\"card\" key={index}>\r\n                <div className=\"row\">\r\n                  <div className=\"col s12 m10 l10\">\r\n                    <h5>{book.volumeInfo.title}</h5>\r\n                  </div>\r\n                  <div className=\"col s12 m2 l2\">\r\n                    <button className=\"btn\" type=\"button\">\r\n                      <a href={book.volumeInfo.infoLink} className=\"white-text\">\r\n                        View\r\n                      </a>\r\n                    </button>\r\n                    <button className=\"btn\" type=\"button\" onClick={() => props.save(index)}>\r\n                      Save\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col s12\">\r\n                    Written by {book.volumeInfo.authors}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col s12 m3 l3\">\r\n                    <img\r\n                      src={book.volumeInfo.imageLinks.smallThumbnail}\r\n                      alt={book.volumeInfo.title}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col s12 m9 l9\">\r\n                    <p>{book.volumeInfo.description}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ResultBox;\r\n","export default {\r\n    searchBook: async (searchWord) => {\r\n        try {\r\n            const res = await fetch(`https://www.googleapis.com/books/v1/volumes?q=intitle:${searchWord}&key=${process.env.REACT_APP_GOOGLE_API_KEY}`);\r\n            return res.json();\r\n        }\r\n        catch (err) {\r\n            return err;\r\n        }\r\n    },\r\n    getSaved: async () => {\r\n        try {\r\n            const res = await fetch(`http://localhost:8080/api/getbooks`);\r\n            return res.json();\r\n        } catch (err) {\r\n            return err;\r\n        }\r\n    },\r\n    setSaved: async (data) => {\r\n        try {\r\n            const res = await fetch(`http://localhost:8080/api/savebook`, {\r\n                method: \"post\",\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n            return res.json();\r\n        } catch (err) {\r\n            return err;\r\n        }\r\n    },\r\n    deleteSaved: async (_id) => {\r\n        try {\r\n            const res = await fetch(`http://localhost:8080/api/deletesaved/${_id}`)\r\n            return res.json();\r\n        } catch (err) {\r\n            return err;\r\n        }\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport Navbar from \"../component/navbar\";\r\nimport SearchBox from \"../component/searchbox\";\r\nimport HeadBox from \"../component/headbox\";\r\nimport ResultBox from \"../component/resultbox\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport services from \"../services\";\r\n\r\nfunction Search() {\r\n  const { register, handleSubmit } = useForm();\r\n  const [books, setBooks] = useState([]);\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const api = await services.searchBook(data.searchWord);\r\n      console.log(api);\r\n      setBooks(api.items);\r\n    } catch (err) {\r\n      return err;\r\n    }\r\n  };\r\n\r\n  const save = async (index) => {\r\n    try {\r\n      let { title, infoLink, authors, description, imageLinks } = books[index].volumeInfo;\r\n      let data = {\r\n        title,\r\n        infoLink,\r\n        authors,\r\n        description,\r\n        imageLinks,\r\n      };\r\n      console.log(data);\r\n      const res = await services.setSaved(data);\r\n      console.log(res.msgBody);\r\n    } catch (err) {\r\n      return err;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar />\r\n      <HeadBox />\r\n      <SearchBox handleSubmit={handleSubmit(onSubmit)} register={register} />\r\n      <ResultBox books={books} save={save} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport services from \"../services\";\r\n\r\nfunction SavedBox() {\r\n  const [savedBooks, setSavedBooks] = useState([]);\r\n\r\n  const click = async (_id) => {\r\n    try {\r\n        const res = await services.deleteSaved(_id);\r\n        console.log(_id);\r\n        console.log(res.msgBody);\r\n        if (res.reload) {\r\n            window.location.reload();\r\n        }\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getSavedBooks = async () => {\r\n      try {\r\n        const data = await services.getSaved();\r\n        setSavedBooks(data);\r\n      } catch (err) {\r\n        return err;\r\n      }\r\n    };\r\n    getSavedBooks();\r\n  }, []);\r\n  console.log(savedBooks);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">Saved Books</div>\r\n          </div>\r\n          {savedBooks.map(function (book, index) {\r\n            return (\r\n              <div className=\"card\" key={index}>\r\n                <div className=\"row\">\r\n                  <div className=\"col s12 m10 l10\">\r\n                    <h5>{book.title}</h5>\r\n                  </div>\r\n                  <div className=\"col s12 m2 l2\">\r\n                    <button className=\"btn\" type=\"button\">\r\n                      <a href={book.infoLink} className=\"white-text\">\r\n                        View\r\n                      </a>\r\n                    </button>\r\n                    <button\r\n                      className=\"btn\"\r\n                      type=\"button\"\r\n                      onClick={() => click(book._id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col s12\">Written by {book.authors}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col s12 m3 l3\">\r\n                    <img\r\n                      src={book.imageLinks.smallThumbnail}\r\n                      alt={book.title}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col s12 m9 l9\">\r\n                    <p>{book.description}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SavedBox;\r\n","import React from \"react\";\r\nimport Navbar from \"../component/navbar\";\r\nimport HeadBox from \"../component/headbox\";\r\nimport SavedBox from \"../component/savedbox\";\r\n\r\nfunction Saved() {\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar/>\r\n            <HeadBox />\r\n            <SavedBox />\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default Saved;","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Search from \"./pages/search\";\nimport Saved from \"./pages/saved\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/saved\" component={Saved} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}